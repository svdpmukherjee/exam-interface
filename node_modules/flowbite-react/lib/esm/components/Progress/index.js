import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import classNames from 'classnames';
import { useId } from 'react';
const colorClasses = {
    dark: 'bg-gray-600 dark:bg-gray-300',
    blue: 'bg-blue-600 dark:bg-blue-600',
    red: 'bg-red-600 dark:bg-red-500',
    green: 'bg-green-600 dark:bg-green-500',
    yellow: 'bg-yellow-400 dark:bg-yellow-400',
    indigo: 'bg-indigo-600 dark:bg-indigo-500',
    purple: 'bg-purple-600 dark:bg-purple-500',
};
const sizeClasses = {
    sm: 'h-1.5',
    md: 'h-2.5',
    lg: 'h-4',
    xl: 'h-6',
};
export const Progress = ({ className, color = 'blue', label = '', labelPosition = 'inside', labelProgress = false, progress, size = 'md', ...props }) => {
    const id = useId();
    return (_jsxs(_Fragment, { children: [_jsx("span", { id: `${id}-flowbite-progress`, className: "sr-only", children: label }), _jsxs("div", { "aria-labelledby": `${id}-flowbite-progress`, "aria-valuenow": progress, role: "progressbar", ...props, children: [label && labelPosition === 'outside' && (_jsxs("div", { className: "mb-1 flex justify-between font-medium dark:text-white", children: [_jsx("span", { children: label }), labelProgress && _jsxs("span", { children: [progress, "%"] })] })), _jsx("div", { className: classNames('w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700', sizeClasses[size]), children: _jsx("div", { className: classNames('flex items-center justify-center rounded-full text-center font-medium leading-none text-blue-100', colorClasses[color], sizeClasses[size], className), style: { width: `${progress}%` }, children: label && labelPosition === 'inside' && label }) })] })] }));
};
