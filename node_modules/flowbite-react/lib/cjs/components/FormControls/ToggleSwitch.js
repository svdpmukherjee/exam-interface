"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToggleSwitch = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const classnames_1 = __importDefault(require("classnames"));
const react_1 = require("react");
const ToggleSwitch = ({ checked, className, disabled, label, name, onChange, ...props }) => {
    const id = (0, react_1.useId)();
    const toggle = () => onChange(!checked);
    const handleClick = (event) => {
        event.preventDefault();
        toggle();
    };
    const handleKeyPress = (event) => {
        event.preventDefault();
    };
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [name && checked && (0, jsx_runtime_1.jsx)("input", { checked: checked, hidden: true, name: name, readOnly: true, type: "checkbox", className: "sr-only" }), (0, jsx_runtime_1.jsxs)("button", { "aria-checked": checked, "aria-labelledby": `${id}-flowbite-toggleswitch-label`, disabled: disabled, id: `${id}-flowbite-toggleswitch`, onClick: handleClick, onKeyPress: handleKeyPress, role: "switch", tabIndex: 0, type: "button", className: (0, classnames_1.default)('group relative flex items-center rounded-lg focus:outline-none', {
                    'cursor-not-allowed opacity-50': disabled,
                    'cursor-pointer': !disabled,
                }, className), ...props, children: [(0, jsx_runtime_1.jsx)("div", { className: (0, classnames_1.default)('toggle-bg h-6 w-11 rounded-full border group-focus:ring-4 group-focus:ring-blue-500/25', checked
                            ? 'border-blue-700 bg-blue-700 after:translate-x-full after:border-white'
                            : 'border-gray-200 bg-gray-200 dark:border-gray-600 dark:bg-gray-700') }), (0, jsx_runtime_1.jsx)("span", { "data-testid": "flowbite-toggleswitch-label", id: `${id}-flowbite-toggleswitch-label`, className: "ml-3 text-sm font-medium text-gray-900 dark:text-gray-300", children: label })] })] }));
};
exports.ToggleSwitch = ToggleSwitch;
